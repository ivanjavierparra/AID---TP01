radar <- cbind(razaperros[7],radar)
#radar <- radar %>% mutate(agresividad=recode(agresividad,
#                         `1`="Male",
#                         `2`="Female"))
radar <- radar %>% group_by(agresividad) %>% summarize_all(mean)
radar<- rbind(c("Max",rep(3,5)),
c("Min",rep(1,5)),
radar)
rownamesRadar <- radar[1]
radar <- radar[-c(1)]
radar <- as_tibble(lapply(radar,as.numeric))
rownames(radar) <- as.vector(t(rownamesRadar))
opar <- par()
# Define settings for plotting in a 3x4 grid, with appropriate margins:
par(mar = rep(0.8,4))
par(mfrow = c(3,1))
# Produce a radar-chart for each student
for (i in 3:nrow(radar)) {
create_beautiful_radarchart(radar[c(1:2,i),],
caxislabels = c(1,2, 3),
title= row.names(radar)[i], seg=2)
}
# Restore the standard par() settings
par <- par(opar)
gorriones
View(gorriones)
dim(gorriones) # la dimensi贸n dice 7 columnas pero son 6 variables y 49 registros
#la primer columna corresponde a el orden del registro
View(gorriones)
dim(gorriones) # la dimensi贸n dice 7 columnas pero son 6 variables y 49 registros
#la primer columna corresponde a el orden del registro
vector_medias=apply(gorr,2,mean)
vector_medias
matriz_covarianzas=var(gorr)
round(matriz_covarianzas,3)
mediasEj5 <- as_tibble(t(colMeans(gorr[2:6])))
gorr
#mediasEj5 <- as_tibble(t(colMeans(gorr[2:6])))
#mediasEj5 %>%   kbl(caption = "Vector de medias") %>% kable_classic(full_width =F)
mediasEj5 <- as_tibble(t(colMeans(gorr)))
mediasEj5 %>%   kbl(caption = "Vector de medias") %>% kable_classic(full_width =F)
vector_medias=apply(gorr,2,mean)
vector_medias
matriz_correlacion=cor(gorr)
round(matriz_correlacion,3)
gorr["Diferencias"] <- gorr$largototal - gorr$humero
gorr["Diferencias"]
vector_medias
gorr["Diferencias"] <- gorr$largototal - gorr$humero
gorr["Diferencias"]
vector_medias=apply(gorr,2,mean)
vector_medias
matriz_covarianzas=var(gorr)
round(matriz_covarianzas,3)
matriz_correlacion=cor(gorr)
round(matriz_correlacion,3)
trazas5 <- cbind(sum(diag(covb)),sum(diag(corb)),sum(diag(covg)),sum(diag(corg)))
matriz_correlacion=cor(gorr) %>% rount(3)
matriz_correlacion=cor(gorr) %>% round(3)
#round(matriz_correlacion,3)
matriz_correlacion=cor(gorr) %>% round(3)
#round(matriz_correlacion,3)
matriz_correlacion
vector_medias_1=apply(gorr,2,mean)
vector_medias_1
matriz_covarianzas_1=var(gorr) %>% round(3)
matriz_covarianzas
matriz_covarianzas_1=var(gorr) %>% round(3)
matriz_covarianzas_1
gorr$Diferencias <- NULL
vector_medias_1=apply(gorr,2,mean)
vector_medias_1
matriz_covarianzas_1=var(gorr) %>% round(3)
matriz_covarianzas_1
matriz_covarianzas_1=var(gorr) %>% round(3)
matriz_covarianzas_1
matriz_correlacion_1=cor(gorr) %>% round(3)
#round(matriz_correlacion,3)
matriz_correlacion_1
gorr["Diferencias"] <- gorr$largototal - gorr$humero
gorr["Diferencias"]
vector_medias_2=apply(gorr,2,mean)
vector_medias_2
matriz_covarianzas_2=var(gorr) %>% round(3)
matriz_covarianzas_2
matriz_correlacion_2=cor(gorr) %>% round(3)
matriz_correlacion_2
trazas5 <- cbind(sum(diag(matriz_covarianzas_1)),sum(diag(matriz_correlacion_1)),sum(diag(matriz_covarianzas_2)),sum(diag(matriz_correlacion_2)))
colnames(trazas5) <- c("Covarianza","Correlaci贸n","Covarianza nueva","Correlaci贸n nueva")
trazas5 %>%   kbl(caption = "Trazas de las matrices") %>% kable_classic(full_width = F)
datosEj1 <- recepcionistas %>% mutate(avg_juez1=rowMeans(datosEj1[2:4]), .after = idiom.juez1)
datosEj1 <- recepcionistas %>% mutate(avg_juez1=rowMeans(recepcionistas[2:4]), .after = idiom.juez1)
datosEj1 <- recepcionistas %>% mutate(avg_juez2=rowMeans(recepcionistas[6:8]))
datosEj1 <- recepcionistas %>% mutate(avg_juez1=rowMeans(recepcionistas[2:4]), .after = idiom.juez1)
datosEj1 <- recepcionistas %>% mutate(avg_juez2=rowMeans(recepcionistas[5:7]))
datosEj1[c(1,5,9)] %>% kbl(caption = "Promedios") %>% kable_classic(full_width =F)
datosEj1 <- recepcionistas %>% mutate(avg_juez1=rowMeans(recepcionistas[2:4]), .after = idiom.juez1)
datosEj1 <- recepcionistas %>% mutate(avg_juez2=rowMeans(recepcionistas[5:7]))
datosEj1[c(1,5,7)] %>% kbl(caption = "Promedios") %>% kable_classic(full_width =F)
datosEj1 =  readxl::read_excel("../../recepcionistas.xls")
datosEj1 <- datosEj1 %>% mutate(avg_juez1=rowMeans(datosEj1[2:4]), .after = idiom.juez1)
datosEj1 <- datosEj1 %>% mutate(avg_juez2=rowMeans(datosEj1[5:7]))
datosEj1[c(1,5,7)] %>% kbl(caption = "Promedios") %>% kable_classic(full_width =F)
datosEj1 =  readxl::read_excel("../../recepcionistas.xls")
datosEj1 <- datosEj1 %>% mutate(avg_juez1=rowMeans(datosEj1[2:4]), .after = idiom.juez1)
datosEj1 <- datosEj1 %>% mutate(avg_juez2=rowMeans(datosEj1[5:7]))
datosEj1[c(1,7,8)] %>% kbl(caption = "Promedios") %>% kable_classic(full_width =F)
datosEj1 =  readxl::read_excel("../../recepcionistas.xls")
datosEj1 <- datosEj1 %>% mutate(avg_juez1=rowMeans(datosEj1[2:4]), .after = idiom.juez1)
datosEj1 <- datosEj1 %>% mutate(avg_juez2=rowMeans(datosEj1[5:7]))
#datosEj1[c(1,6,8)] %>% kbl(caption = "Promedios") %>% kable_classic(full_width =F)
datosEj1
datosEj1 =  readxl::read_excel("../../recepcionistas.xls")
datosEj1 <- datosEj1 %>% mutate(avg_juez1=rowMeans(datosEj1[2:4]), .after = idiom.juez1)
datosEj1 <- datosEj1 %>% mutate(avg_juez2=rowMeans(datosEj1[5:7]))
datosEj1[c(1,5,9)] %>% kbl(caption = "Promedios") %>% kable_classic(full_width =F)
#datosEj1
# puntuaciones=select(recepcionistas,cord.juez1:idiom.juez2)
puntuaciones=recepcionistas[2:7]
promxcand=data.frame("Cand"=cand,"Prom"=round(apply(puntuaciones,1,mean),2))
rownames(promxcand)<-NULL
promxcand
datosEj1[which.max(datosEj1$avg_juez1),c(1,5)]  %>% kbl() %>% kable_classic(full_width =F)
datosEj1[which.max(datosEj1$avg_juez1),c(1,5)]
datosEj1[which.max(datosEj1$avg_juez1),c(1,5)]  %>% kbl() %>% kable_classic(full_width =F)
datosEj1[which.max(datosEj1$avg_juez2),c(1,9)]  %>% kbl() %>% kable_classic(full_width =F)
aux <- recepcionistas %>% mutate(promedio = rowMeans(recepcionistas[,2:7]))
aux
#estandarizamos por columna
punt_stand=data.frame(puntuaciones%>%scale())
punt_stand
summary(punt_stand)
#queremos hacer comparables las diferentes puntuaciones
#estandarizamos por columna
punt_stand=data.frame(puntuaciones%>%scale())
punt_stand
#summary(punt_stand)
#queremos hacer comparables las diferentes puntuaciones
#estandarizamos por columna
punt_stand=data.frame(puntuaciones%>%scale())
punt_stand
summary(punt_stand)
#queremos hacer comparables las diferentes puntuaciones
sal2=data.frame(cand,t(t(juez1)%>%scale()%>%round(2)))
rownames(sal2)<-NULL
sal2 %>%
kbl(caption = "Puntuaciones Estandarizadas Juez 1") %>%
kable_classic(full_width = F, html_font = "Cambria")
sal3=data.frame(cand,t(t(juez2)%>%scale()%>%round(2)))
rownames(sal3)<-NULL
sal3 %>%
kbl(caption = "Puntuaciones Estandarizadas Juez 2") %>%
kable_classic(full_width = F, html_font = "Cambria")
#damos nueva forma a los datos del juez 1
# dj1= gather(sal2, key="rubro", value="valor", cord.juez1:idiom.juez1)
dj1= gather(sal2, key="rubro", value="valor", cord.juez.1:idiom.juez1)
juez1 <- juez1 %>%
rename("cord.juez1" = `cord.juez 1`)
#damos nueva forma a los datos del juez 1
# dj1= gather(sal2, key="rubro", value="valor", cord.juez1:idiom.juez1)
dj1= gather(sal2, key="rubro", value="valor", cord.juez.1:idiom.juez1)
#damos nueva forma a los datos del juez 1
# dj1= gather(sal2, key="rubro", value="valor", cord.juez1:idiom.juez1)
dj1= gather(sal2, key="rubro", value="valor", cord.juez1:idiom.juez1)
dj1
RUBRO=as.factor(dj1$rubro)
Candi=as.factor(dj1$cand)
plot1=ggplot(dj1,aes(x=RUBRO,y=valor))+geom_line(aes(x=RUBRO,y=valor,group =Candi,color=Candi))+ labs(title = "juez 1") +
theme(axis.text.x  = element_text(angle=90))
#damos nueva forma a los datos del juez 2
dj2= gather(sal3, key="rubro", value="valor", cord.juez.2:idiom.juez2)
#damos nueva forma a los datos del juez 1
# dj1= gather(sal2, key="rubro", value="valor", cord.juez1:idiom.juez1)
dj1= gather(sal2, key="rubro", value="valor", cord.juez1:idiom.juez1)
dj1
RUBRO=as.factor(dj1$rubro)
Candi=as.factor(dj1$cand)
plot1=ggplot(dj1,aes(x=RUBRO,y=valor))+geom_line(aes(x=RUBRO,y=valor,group =Candi,color=Candi))+ labs(title = "juez 1") +
theme(axis.text.x  = element_text(angle=90))
#damos nueva forma a los datos del juez 2
dj2= gather(sal3, key="rubro", value="valor", cord.juez2:idiom.juez2)
dj2
Rubro=as.factor(dj2$rubro)
Candi=as.factor(dj2$cand)
plot2=ggplot(dj2,aes(x=Rubro,y=valor))+geom_line(aes(x=Rubro,y=valor,group =Candi,color=Candi))+ labs(title = "juez 2")+theme(axis.text.x  = element_text(angle=90))
ggarrange(plot1,plot2)
colPalette <- c("#596791","#565318","#32CD32","#FF69B4","#FF4500","#20B2AB")
graf1 <- ggparcoord(internet, columns=c(2:5),groupColumn="Nacionalidad",showPoints=TRUE)+scale_color_manual(values = colPalette) + theme_bw()
#graf1+ facet_wrap(.~Variedad,nrow=2)
colPalette <- c("#596791","#565318","#32CD32","#FF69B4","#FF4500","#20B2AB")
ggparcoord(internet, columns=c(2:5),groupColumn="Nacionalidad",showPoints=TRUE)+scale_color_manual(values = colPalette) + theme_bw()
#graf1+ facet_wrap(.~Variedad,nrow=2)
internet
colPalette <- c("#596791","#565318","#32CD32","#FF69B4","#FF4500","#20B2AB")
ggparcoord(internet, columns=c(3:7),groupColumn="Nacionalidad",showPoints=TRUE)+scale_color_manual(values = colPalette) + theme_bw()
#graf1+ facet_wrap(.~Variedad,nrow=2)
colPalette <- c("#596791","#565318","#32CD32","#FF69B4","#FF4500","#20B2AB")
ggparcoord(internet, columns=c(3:4),groupColumn="Nacionalidad",showPoints=TRUE)+scale_color_manual(values = colPalette) + theme_bw()
#graf1+ facet_wrap(.~Variedad,nrow=2)
colPalette <- c("#596791","#565318","#32CD32","#FF69B4","#FF4500","#20B2AB")
ggparcoord(internet, columns=c(3:3),groupColumn="Nacionalidad",showPoints=TRUE)+scale_color_manual(values = colPalette) + theme_bw()
colPalette <- c("#596791","#565318","#32CD32","#FF69B4","#FF4500","#20B2AB")
ggparcoord(internet, columns=c(3:7),groupColumn="Nacionalidad",showPoints=TRUE)+scale_color_manual(values = colPalette) + theme_bw()
#graf1+ facet_wrap(.~Variedad,nrow=2)
valores_unicos <- internet %>% distinct(internet$Sexo)
valores_unicos
tabla_frecuencias_sexo <- table(factor(internet$Sexo))
df_frecuencias <- as.data.frame(tabla_frecuencias_sexo)
# Renombrar las columnas
colnames(df_frecuencias) <- c("Valor", "Frecuencia")
# Mostrar la tabla de frecuencias
print(df_frecuencias)
internet %>% arrange(Edad)
apply(internet[c(3,5,7:10)], 2,function(x) skewness(x)) %>%
kbl(caption = "Coeficientes de Fisher") %>% kable_classic(full_width =F)
apply(internet[c(3,5,7:10)], 2,function(x) skewness(x))
apply(scale(internet[c(3,5,7:10)]), 2,function(x) skewness(x))
apply(scale(internet[c(3,5,7:10)]), 2,function(x) skewness(x))
df_estandarizado <- scale(df)
df_estandarizado <- scale(df)
df_estandarizado <- scale(internet)
df <- internet %>% select(Edad, Estatura, Uso, Temperatura, Autos, Cigarrillos)
df <- internet %>% select(Edad, Estatura, Uso, Temperatura, Autos, Cigarrillos)
df <- select(internet, Edad, Estatura, Uso, Temperatura, Autos, Cigarrillos)
internet
#df <- select( Edad, Estatura, Uso, Temperatura, Autos, Cigarrillos)
#df_estandarizado <- scale(df)
#apply(df_estandarizado, 2,function(x) skewness(x))
internet[c(3,5:6,7:9)]
#df <- select( Edad, Estatura, Uso, Temperatura, Autos, Cigarrillos)
#df_estandarizado <- scale(df)
#apply(df_estandarizado, 2,function(x) skewness(x))
df <- internet[c(3,5:6,7:9)]
#df_estandarizado <- scale(df)
#apply(df_estandarizado, 2,function(x) skewness(x))
df <- internet[c(3,5:6,7:9)]
df_estandarizado <- scale(df)
apply(df_estandarizado, 2,function(x) skewness(x))
data_mod <- melt(internet, id.vars='ID',
measure.vars=c('Edad', 'Autos','Temperatura','Estatura','Uso','Cigarrillos'))
ggplot(data_mod) +
geom_boxplot(aes(x=ID, y=value, fill=variable,alpha=0.2)) +
theme_minimal()
Q <- as_data_frame(apply(internet[c(3,5,7:10)], 2, function(x) quantile(x, probs=c(.25, .75), na.rm = FALSE)) )
iqr <- as_data_frame(t(apply(internet[c(3,5,7:10)],2, function (x) IQR(x))))
colnames(iqr) <- colnames(Q)
modCiga <- subset(internet,
internet$Cigarrillos < (Q$Cigarrillos[1] - 1.5*iqr$Cigarrillos) |
internet$Cigarrillos > (Q$Cigarrillos[2] + 1.5*iqr$Cigarrillos))
extreCiga <- subset(modCiga,
modCiga$Cigarrillos < (Q$Cigarrillos[1] - 3*iqr$Cigarrillos) |
modCiga$Cigarrillos > (Q$Cigarrillos[2] + 3*iqr$Cigarrillos))
modUso <- subset(internet,
internet$Uso < (Q$Uso[1] - 1.5*iqr$Uso) |
internet$Uso > (Q$Uso[2] + 1.5*iqr$Uso))
extreUso <- subset(modUso,
modUso$Uso < (Q$Uso[1] - 3*iqr$Uso) |
modUso$Uso > (Q$Uso[2] + 3*iqr$Uso))
modEdad <- subset(internet,
internet$Edad < (Q$Edad[1] - 1.5*iqr$Edad) |
internet$Edad > (Q$Edad[2] + 1.5*iqr$Edad))
extreEdad <- subset(modEdad ,
modEdad$Edad < (Q$Edad[1] - 3*iqr$Edad) |
modEdad$Edad > (Q$Edad[2] + 3*iqr$Edad))
modEstatura <- subset(internet,
internet$Estatura < (Q$Estatura[1] - 1.5*iqr$Estatura) |
internet$Estatura > (Q$Estatura[2] + 1.5*iqr$Estatura))
extreEstatura <- subset(modEstatura ,
modEstatura$Estatura < (Q$Estatura[1] - 3*iqr$Estatura) |
modEstatura$Estatura > (Q$Estatura[2] + 3*iqr$Estatura))
modAutos <- subset(internet,
internet$Autos < (Q$Autos[1] - 1.5*iqr$Autos) |
internet$Autos > (Q$Autos[2] + 1.5*iqr$Autos))
extreAutos <- subset(modAutos ,
modAutos$Autos < (Q$Autos[1] - 3*iqr$Autos) |
modAutos$Autos > (Q$Autos[2] + 3*iqr$Autos))
modTemperatura <- subset(internet,
internet$Temperatura < (Q$Temperatura[1] - 1.5*iqr$Temperatura) |
internet$Temperatura > (Q$Temperatura[2] + 1.5*iqr$Temperatura))
extreTemperatura <- subset(modTemperatura ,
modTemperatura$Temperatura < (Q$Temperatura[1] - 3*iqr$Temperatura) |
modTemperatura$Temperatura > (Q$Temperatura[2] + 3*iqr$Temperatura))
outliers <- data.frame( rbind(nrow(modAutos),nrow(modTemperatura),nrow(modEdad),
nrow(modEstatura),nrow(modCiga),nrow(modUso)),
rbind(nrow(extreAutos),nrow(extreTemperatura),nrow(extreEdad),
nrow(extreEstatura),nrow(extreCiga),nrow(extreUso)),
row.names = c('Autos','Temperatura','Edad','Estatura','Cigarrillos','Uso')
)
colnames(outliers) <- c('Moderados','Extremos')
outliers
DI.autos=quantile(internet$Autos,0.75)-quantile(internet$Autos,0.25)
DI.edad=quantile(internet$Edad,0.75)-quantile(internet$Edad,0.25)
DI.sitio=quantile(internet$Sitio,0.75)-quantile(internet$Sitio,0.25)
DI.temperatura=quantile(internet$Temperatura,0.75)-quantile(internet$Temperatura,0.25)
DI.autos=quantile(internet$Autos,0.75)-quantile(internet$Autos,0.25)
DI.cigarrillos=quantile(internet$Cigarrillos,0.75)-quantile(internet$Cigarrillos,0.25)
resumenes = rbind(DI.edad,DI.sitio,DI.temperatura,DI.autos,DI.cigarrillos)
resumenes
Q1_edad = quantile(internet$Edad,0.25)
Q3_edad = quantile(internet$Edad,0.75)
#Q3_sitio = quantile(internet$Sitio,0.75)
#Q3_temp = quantile(internet$Temperatura,0.75)
#Q3_autos = quantile(internet$Autos,0.75)
#Q3_ciga = quantile(internet$Cigarrillos,0.75)
edad_out_moderado <- c(LI1 = Q1_edad - 1.5*resumenes[1], LS1 = Q3_edad + 1.5*resumenes[1])
edad_out_severo <- c(LI2 = Q1_edad - 3*resumenes[1], LS2 = Q3_edad + 3*resumenes[1])
out_edad <- c(edad_out_moderado, edad_out_severo)
out_edad
#sitio <- c(LI1 = Q3_sitio - 1.5*resumenes[2], LS1 = Q3_sitio + 1.5*resumenes[2])
#temp <- c(LI1 = Q3_temp - 1.5*resumenes[3], LS1 = Q3_temp + 1.5*resumenes[3])
#autos <- c(LI1 = Q3_autos - 1.5*resumenes[4], LS1 = Q3_autos + 1.5*resumenes[4])
#ciga <- c(LI1 = Q3_ciga - 1.5*resumenes[5], LS1 = Q3_ciga + 1.5*resumenes[5])
#limites_outliers = rbind(edad, sitio, temp, autos, ciga)
#colnames(limites_outliers) <- c( "Li", "LS")
#limites_outliers
internet %>% filter(Edad <= out_edad[1] & Edad > out_edad[3])
internet %>% filter(Edad >= out_edad[4])
# leemos la base de datos
recep <- read_excel("../../recepcionistas.xls")
recep
knitr::opts_chunk$set(echo = TRUE)
#Cargamos las librer铆as
library(readxl)#lectura
library(dplyr) #manipulacion de datos
library(kableExtra) #tablas
library(ggplot2) #graficos
library(tidyverse) #manipulacion de datos
library(ggpubr) #para juntar
library(ggforce) # grafico de violin y jitter
library(GGally) # ggpairs
library(corrplot) # para correlogramas
library(DT)
library(lubridate)#manejo de fechas
library(moments)
library(reshape2)
library(car)
library(plotly)
library(fmsb)
library(geomtextpath)
library(MASS)
# leemos la base de datos
recep <- read_excel("../../recepcionistas.xls")
recep
medias <- as_tibble(t(colMeans(recep[2:7])))
colnames(medias) <- colnames(recep[2:7])
v_medias <- as_tibble(t(colMeans(recep[2:7])))
colnames(v_medias) <- colnames(recep[2:7])
v_medias
cov_j1 <- cov(recep[2:4])
cov_j1
v_medias <- colMeans(recep[2:7])
colnames(v_medias) <- colnames(recep[2:7])
cov_j2 <- cov(recep[5:7])
cov_j2
cov_t <- cov(recep[2:7])
cov_t
cor_j1 <- cor(recep[2:4], method="pearson")
cor_j1
cor_j2 <- cor(recep[5:7], method="pearson")
cor_j2
cor_t <- cor(recep[2:7], method="pearson")
cor_t
sumaMatriz <- cov_j1 + cov_j2
sumaMatriz
sumaMatrizC <- cor_j1 + cor_j2
sumaMatrizC
# leemos la base de datos
internet <- read_excel("../../internet2013.xls")
internet
v_medias <- t(colMeans(recep[2:7]))
colnames(v_medias) <- colnames(recep[2:7])
v_medias
v_medias <- as_tibble(t(colMeans(recep[2:7])))
colnames(v_medias) <- colnames(recep[2:7])
v_medias
variables_numericas <- internet[,3,5,7:10]
outliers_multivariados <- mahalanobisOutlier(variables_numericas)
library(mvoutlier)
install.packages("mvoutlier")
library(mvoutlier)
variables_numericas <- internet[,3,5,7:10]
outliers_multivariados <- mahalanobisOutlier(variables_numericas)
variables_numericas <- internet[,3,5,7:10]
outliers_multivariados <- mahalanobisOutlier(variables_numericas)
install.packages("mvoutlier")
library(mvoutlier)
install.packages("mvoutlier")
library(mvoutlier)
install.packages("mvoutlier")
knitr::opts_chunk$set(echo = TRUE)
variables_numericas <- internet[,3,5,7:10]
outliers_multivariados <- mahalanobisOutlier(variables_numericas)
#variables_numericas <- internet[,3,5,7:10]
#outliers_multivariados <- mahalanobisOutlier(variables_numericas)
#outliers_multivariados
variables_numericas <- datos[, sapply(datos, is.numeric)]
#variables_numericas <- internet[,3,5,7:10]
#outliers_multivariados <- mahalanobisOutlier(variables_numericas)
#outliers_multivariados
variables_numericas <- internet[, sapply(internet, is.numeric)]
variables_numericas
knitr::opts_chunk$set(echo = TRUE)
#Cargamos las librer铆as
library(readxl)#lectura
library(dplyr) #manipulacion de datos
library(kableExtra) #tablas
library(ggplot2) #graficos
library(tidyverse) #manipulacion de datos
library(ggpubr) #para juntar
library(ggforce) # grafico de violin y jitter
library(GGally) # ggpairs
library(corrplot) # para correlogramas
library(DT)
library(lubridate)#manejo de fechas
library(moments)
library(reshape2)
library(car)
library(plotly)
library(fmsb)
library(geomtextpath)
library(MASS)
install.packages("mvoutlier")
library(mvoutlier)
install.packages("sgeostat")
install.packages("sgeostat")
knitr::opts_chunk$set(echo = TRUE)
library(mvoutlier)
library(sgeostat)
install.packages("sgeostat")
knitr::opts_chunk$set(echo = TRUE)
#Cargamos las librer铆as
library(readxl)#lectura
library(dplyr) #manipulacion de datos
library(kableExtra) #tablas
library(ggplot2) #graficos
library(tidyverse) #manipulacion de datos
library(ggpubr) #para juntar
library(ggforce) # grafico de violin y jitter
library(GGally) # ggpairs
library(corrplot) # para correlogramas
library(DT)
library(lubridate)#manejo de fechas
library(moments)
library(reshape2)
library(car)
library(plotly)
library(fmsb)
library(geomtextpath)
library(MASS)
install.packages("sgeostat")
library(mvoutlier)
library(sgeostat)
library(sgeostat)
library(mvoutlier)
library(sgeostat)
library(mvoutlier)
library(sgeostat)
library(mvoutlier)
library(sgeostat)
library(mvoutlier)
variables_numericas <- internet[,3,5,7:10]
outliers_multivariados <- mahalanobisOutlier(variables_numericas)
library(sgeostat)
library(mvoutlier)
variables_numericas <- internet[,3,5,7:10]
outliers_multivariados <- mahalanobisOutlier(variables_numericas)
knitr::opts_chunk$set(echo = TRUE)
#Cargamos las librer铆as
library(readxl)#lectura
library(dplyr) #manipulacion de datos
library(kableExtra) #tablas
library(ggplot2) #graficos
library(tidyverse) #manipulacion de datos
library(ggpubr) #para juntar
library(ggforce) # grafico de violin y jitter
library(GGally) # ggpairs
library(corrplot) # para correlogramas
library(DT)
library(lubridate)#manejo de fechas
library(moments)
library(reshape2)
library(car)
library(plotly)
library(fmsb)
library(geomtextpath)
library(MASS)
#leemos los datos
recepcionistas <- read_excel("../../recepcionistas.xls")
recepcionistas
#separamos  las puntuaciones por juez
juez1=recepcionistas[,2:4]
juez2=recepcionistas[,5:7]
#calculamos los promedios por candidato para cada juez
prom_j1=apply(juez1,1,mean)
prom_j2=apply(juez2,1,mean)
#buscamos el m谩ximo promedio por juez y vemos a quien corresponde
cand=recepcionistas%>%dplyr::select(candidatos)%>%unlist()
max_j1=cand[which.max(prom_j1)]
max_j1
max_j2=cand[which.max(prom_j2)]
max_j2
#coinciden los m谩ximos? No coinciden.
promedios <- recepcionistas %>% mutate(avg_juez1=rowMeans(datosEj1[2:4]), .after = idiom.juez1)
promedios <- promedios %>% mutate(avg_juez2=rowMeans(promedios[5:7]))
promedios[c(1,5,9)] %>% kbl(caption = "Promedios") %>% kable_classic(full_width =F)
promedios[which.max(promedios$avg_juez1),c(1,5)]  %>% kbl() %>% kable_classic(full_width =F)
promedios[which.max(promedios$avg_juez2),c(1,9)]  %>% kbl() %>% kable_classic(full_width =F)
# puntuaciones=select(recepcionistas,cord.juez1:idiom.juez2)
puntuaciones=recepcionistas[2:7]
promxcand=data.frame("Cand"=cand,"Prom"=round(apply(puntuaciones,1,mean),2))
rownames(promxcand)<-NULL
promxcand
